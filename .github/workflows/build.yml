name: Build Thorium
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update -y
          removePackages=`apt list --manual-installed | awk '{print $1}' | sed 's|\(.*\)/.*|\1|' | grep -E -v 'base*|bash|binutils|bsdutils|bzip2|ca-certificates|coreutils|curl|dbus|diffutils|dpkg*|file|findutils|git*|grep|gzip|hostname|init|iproute2|iputils-ping|keyutils|lib*|linux-headers*|linux-image*|lld*|locales|login|lsb-release|make|net-tools|openssh-*|openssl|patchelf|rpm|rsync|session-manager-plugin|shellcheck|ssh|sudo|sysvinit-utils|tar|tcl*|time|tk|tzdata|ubuntu-*|unzip|upx-ucl|walinuxagent|wget|xz-utils|zip*|zsync|apt|dash|ncurses-bin|shim-signed|grub-efi-*|mokutil|sbsigntool|secureboot-db|docker-*|containerd.io' | tr '\n' ' '`
          echo "Removing following userinstalled packages: $removePackages"
          sudo apt purge -y $removePackages
          sudo apt clean && sudo apt autoremove --purge -y $(dpkg -l | grep '^rc' | awk '{print $2}') && sudo rm -rf /var/lib/apt/lists/*
          sudo apt upgrade -y
          sudo apt install -y gn ninja-build ffmpeg libavformat-dev libavfilter-dev libavdevice-dev libavcodec-dev libffi-dev libgbm-dev libdrm-dev libwayland-egl1-mesa libnss3-dev patch pkgconf libva-dev libpulse-dev libpipewire-0.3-dev libffi-dev libelf-dev libc6-dev flex curl bison elfutils fakeroot gperf zstd mesa-common-dev libxkbcommon-dev libbluetooth-dev libvulkan-dev libcups2 libfreetype6 libfontconfig1

      - name: Install depot tools
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$PWD/depot_tools" >> $GITHUB_PATH

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      - name: Checkout sources
        run: |
          gclient sync --no-history -j$(nproc) 

      - name: Build
        run: |
          cd src
          mkdir -p out/Default
          cp ../args.gn ./out/Default/args.gn
          gn gen out/Default
          autoninja -C out/Default chrome

      - uses: actions/upload-artifact@v4
        with:
          path: |
            out/Default/*.so
            out/Default/*.a
            out/Default/chrome
